sorted_list = [2, 4, 6, 9, 12, 33, 45, 233, 256, 345, 444, 556, 789, 900, 901, 908, 1000, 1100, 1224, 1345, 1346, 1467,
               1567, 1678, 1701, 1780, 1800, 1900, 1950, 1980, 2000]
item_to_find = 444


def bin_search(sorted_list, item_to_find):
    # Задаем min и max границу индексов для поиска в ней
    # Для первой итерации это будет весь список
    min_index = 0
    max_index = len(sorted_list) - 1

    # Поиск будет выполняться пока min граница не не будет равна max, т.е. искомое значение отсутствует
    while min_index <= max_index:
        # Каждую итерацию определяем середину списка
        mid_index = (min_index + max_index) // 2

        # Если искомый элемент равен серединному значению списка, то мы нашли число
        if sorted_list[mid_index] == item_to_find:
            return mid_index

        # Если искомый элемент меньше серединного значению списка, то загаданное число находистя слева,
        elif item_to_find < sorted_list[mid_index]:
            # Поэтому max граница теперь становится серединным значение -1 этемент, который мы уже проверили в первом if
            max_index = mid_index - 1
            # Если же искомый элемент больше серединного значению списка, то загаданное число находистя справо,
        else:
            # Поэтому min граница теперь становится серединным значение +1 этемент, который мы уже проверили в первом if
            min_index = mid_index + 1


result_index = bin_search(sorted_list, item_to_find)
print(f"Искомое значение {item_to_find} присутствует в отсортированном списке и имеет индекс - {result_index}")
